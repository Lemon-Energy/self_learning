// 这里是题目、简单题回复、代码题指向文件


// 1、谈谈你是如何理解JS异步编程的，EventLoop、消息队列都是做什么的，什么是宏任务，什么是微任务

// js异步编程，解决js单线程无法同时处理大量耗时任务的问题。将大量耗时的任务使用异步的方式处理
// 可以让不需要等待耗时操作结果的同步任务先执行，可以减少任务的等待时间，减少卡顿感

// EventLoop，通称事件循环，每次执行js代码时，都会产生一个执行栈，再执行栈内代码运行的时候，存在异步代码
// 例如setTimeout时，会放入Web APIs中进行计时等待，计时结束后，异步编程中的回调函数会被放入到消息队列中
// 当执行栈内代码执行完毕后，EventLoop将检查消息队列中是否有需要执行的代码，有就按顺序执行，当执行栈和消息
// 队列均为空时，进入下一轮同样的操作，以此便视为一种循环。

// 宏任务：回调队列中的任务，按队列顺序执行，如setTimeout
// 微任务：当前宏任务中附带的任务，在当前任务执行完成后立即执行，如promise的回调

// 代码题
// 1、请看setTimeout-promise.js

// 后续两个大的代码题，请看project中的lodash.js